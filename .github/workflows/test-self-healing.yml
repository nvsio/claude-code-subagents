name: Test Self-Healing Workflow

on:
  workflow_dispatch:
    inputs:
      test_scenario:
        description: 'Test scenario to run'
        required: true
        default: 'basic'
        type: choice
        options:
          - basic
          - with-changes
          - error-handling
          - all

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  test-basic:
    if: inputs.test_scenario == 'basic' || inputs.test_scenario == 'all'
    runs-on: ubuntu-latest
    name: Test Basic Workflow
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Test Git Configuration
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Test git operations
          echo "test" > test-file.txt
          git add test-file.txt
          git commit -m "test commit" || echo "No changes to commit"
          
      - name: Verify PR Creation Capability
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if we can list PRs
          gh pr list --limit 5
          
          # Check repository permissions
          gh api repos/${{ github.repository }} --jq '.permissions'

  test-with-changes:
    if: inputs.test_scenario == 'with-changes' || inputs.test_scenario == 'all'
    runs-on: ubuntu-latest
    name: Test with Actual Changes
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Create Test Changes
        run: |
          # Create test agent file
          mkdir -p .claude/agents
          cat > .claude/agents/test-agent.md << 'EOF'
          # Test Agent
          
          This is a test agent for workflow validation.
          
          ## Configuration
          - id: test-agent
          - name: Test Agent
          - description: Test agent for workflow validation
          EOF
          
          # Create a modification to agents.json
          if [[ -f .claude/agents.json ]]; then
            cp .claude/agents.json .claude/agents.json.bak
          fi
          echo '{"agents": [{"id": "test-agent", "name": "Test Agent"}]}' > .claude/agents.json
          
      - name: Test PR Creation
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            test: validate PR creation
            
            This is a test PR to validate workflow functionality.
            
            [skip ci]
          branch: test/pr-creation-${{ github.run_number }}
          delete-branch: true
          title: "ðŸ§ª Test PR Creation"
          body: |
            ## Test Pull Request
            
            This PR was created to test the workflow's ability to create PRs.
            
            - Run: ${{ github.run_number }}
            - Test: With Changes
            
            This PR can be closed after verification.
          labels: |
            test
            automated

  test-error-handling:
    if: inputs.test_scenario == 'error-handling' || inputs.test_scenario == 'all'
    runs-on: ubuntu-latest
    name: Test Error Handling
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Test Missing Permissions
        continue-on-error: true
        run: |
          # Try to create a branch without proper setup
          git checkout -b test-branch-${{ github.run_number }}
          echo "test" > test.txt
          git add test.txt
          git commit -m "test" || true
          git push origin test-branch-${{ github.run_number }} || echo "Expected push failure"
          
      - name: Test Invalid Git Config
        continue-on-error: true
        run: |
          # Test with invalid email
          git config --local user.email "invalid-email"
          git config --local user.name ""
          
          echo "test2" > test2.txt
          git add test2.txt
          git commit -m "test with invalid config" || echo "Expected commit failure"
          
      - name: Verify Error Recovery
        run: |
          # Reset to valid configuration
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Verify we can still operate
          git status

  validate-results:
    needs: [test-basic, test-with-changes, test-error-handling]
    if: always()
    runs-on: ubuntu-latest
    name: Validate Test Results
    steps:
      - name: Check Test Results
        run: |
          echo "## Test Results Summary"
          echo ""
          echo "- Basic Test: ${{ needs.test-basic.result }}"
          echo "- With Changes Test: ${{ needs.test-with-changes.result }}"
          echo "- Error Handling Test: ${{ needs.test-error-handling.result }}"
          
          # Fail if any critical test failed
          if [[ "${{ needs.test-basic.result }}" == "failure" ]] || \
             [[ "${{ needs.test-with-changes.result }}" == "failure" ]]; then
            echo "Critical tests failed!"
            exit 1
          fi
          
          echo ""
          echo "All critical tests passed!"
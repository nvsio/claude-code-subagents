name: Agent Generator Simple

on:
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  generate-agent:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.title, '[Agent Request]')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Generate CLO Agent
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # For now, create a hardcoded CLO agent as proof of concept
          cat > .claude/agents/clo-agent.md << 'EOF'
          # clo-agent

          ## Description
          Chief Learning Officer - helps teams build learning culture and knowledge sharing practices

          ## Type
          learning-optimizer

          ## Tools
          - Read
          - Write
          - MultiEdit
          - Grep
          - TodoWrite

          ## Purpose
          The CLO agent helps development teams:
          - Create effective documentation and learning materials
          - Identify knowledge gaps in the codebase
          - Build onboarding guides for new team members
          - Establish best practices for knowledge sharing
          - Track learning progress and skill development

          ## When to Use
          - Setting up onboarding for new developers
          - Creating documentation standards
          - Building team knowledge bases
          - Identifying areas that need better documentation
          - Establishing learning paths

          ## Example Usage
          ```
          @agent-clo-agent create onboarding guide for this repository
          @agent-clo-agent identify knowledge gaps in our documentation
          @agent-clo-agent suggest learning resources for the team
          ```

          ## Self-Improvement
          - Analyzes which documentation gets read most
          - Tracks which onboarding steps cause confusion
          - Learns from team feedback on materials
          - Adapts to team's learning styles over time
          EOF
          
          # Update agents.json
          cat > agent_entry.json << 'EOF'
          {
            "name": "clo-agent",
            "description": "Chief Learning Officer - helps teams build learning culture",
            "type": "learning-optimizer",
            "tools": ["Read", "Write", "MultiEdit", "Grep", "TodoWrite"],
            "trigger": "on-demand",
            "priority": "high"
          }
          EOF
          
          # Add to agents.json
          if [ -f .claude/agents.json ]; then
            jq --argjson newAgent "$(cat agent_entry.json)" '.agents += [$newAgent]' .claude/agents.json > temp.json
            mv temp.json .claude/agents.json
          fi
          
      - name: Create Branch and Push
        run: |
          BRANCH_NAME="agent/clo-${{ github.event.issue.number }}"
          
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Ensure we're on main first
          git checkout main
          git pull origin main
          
          # Create and checkout new branch
          git checkout -b "$BRANCH_NAME"
          
          # Stage and commit changes
          git add .claude/agents/
          git commit -m "feat: add CLO agent for learning optimization
          
          Requested in #${{ github.event.issue.number }}"
          
          # Push the branch
          git push origin "$BRANCH_NAME"
          
      - name: Comment on Issue with PR Link
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = `agent/clo-${{ github.event.issue.number }}`;
            const prUrl = `https://github.com/${{ github.repository }}/compare/main...${branchName}?quick_pull=1`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🎉 Agent Created!\n\nI've created the CLO agent on branch \`${branchName}\`.\n\n[**Click here to create the Pull Request**](${prUrl})\n\nThe PR will add:\n- 📄 \`.claude/agents/clo-agent.md\`\n- 📝 Updated \`.claude/agents.json\`\n\nJust click the link above and then click "Create pull request"!`
            });
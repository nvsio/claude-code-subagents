name: Intelligent Repository Self-Healing

on:
  schedule:
    # Run twice a week to save API credits (Tuesday and Friday at 3 AM UTC)
    - cron: '0 3 * * 2,5'
  pull_request:
    types: [opened, synchronize]
    paths:
      - '.claude/agents/**'
      - '.claude/agents.json'
  workflow_dispatch:
    inputs:
      mode:
        description: 'Maintenance mode'
        required: true
        default: 'light'
        type: choice
        options:
          - light    # Quick validation only
          - standard # Normal maintenance
          - deep     # Full analysis and optimization

jobs:
  # Job 1: Smart PR Review for agent changes
  pr-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Review Agent Changes
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "10"
          direct_prompt: |
            Review this PR's changes to the claude-code-subagents repository.
            
            Focus specifically on:
            1. Agent definition validity in .claude/agents/
            2. Consistency between markdown and JSON files
            3. Tool permissions appropriateness
            4. Self-improvement features implementation
            5. Performance implications of agent capabilities
            
            Be concise and constructive. Only comment on:
            - Schema violations or errors
            - Security concerns with tool permissions
            - Performance issues with agent design
            - Missing required fields
            
            If the changes look good, respond with "LGTM - Agent configurations are valid."
            
            Use the repo-updater agent if you need to validate the changes programmatically.
          allowed_tools: ["Task", "Read", "Grep", "Glob"]

  # Job 2: Scheduled maintenance with cost optimization
  scheduled-maintenance:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 10 # Limited history to save time
          
      - name: Determine maintenance scope
        id: scope
        run: |
          # Check last maintenance run
          LAST_RUN=$(git log --grep="automated repository maintenance" -1 --format="%cr" 2>/dev/null || echo "never")
          echo "last_run=$LAST_RUN" >> $GITHUB_OUTPUT
          
          # Set maintenance mode based on time since last run
          if [[ "${{ github.event.inputs.mode }}" != "" ]]; then
            MODE="${{ github.event.inputs.mode }}"
          elif [[ "$LAST_RUN" == "never" ]] || [[ "$LAST_RUN" == *"week"* ]]; then
            MODE="standard"
          else
            MODE="light"
          fi
          echo "mode=$MODE" >> $GITHUB_OUTPUT
          
      - name: Light Maintenance (Validation Only)
        if: steps.scope.outputs.mode == 'light'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "5"
          direct_prompt: |
            Perform LIGHT maintenance on claude-code-subagents using the repo-updater agent.
            
            ONLY:
            1. Check if agents.json is in sync with markdown files
            2. Validate basic schema compliance
            3. Report any critical errors
            
            DO NOT:
            - Make any changes unless there are actual errors
            - Suggest optimizations
            - Analyze performance
            
            Exit immediately if everything is valid. This is a quick health check only.
          allowed_tools: ["Task", "Read", "Glob", "Grep"]
          
      - name: Standard Maintenance
        if: steps.scope.outputs.mode == 'standard'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "10"
          direct_prompt: |
            Perform standard maintenance on claude-code-subagents using the repo-updater agent.
            
            Tasks:
            1. Validate and sync all agent configurations
            2. Fix any schema violations or inconsistencies
            3. Update agent metadata if outdated
            4. Apply critical performance fixes only
            
            Be efficient - make only necessary changes that improve repository health.
          allowed_tools: ["Task", "Read", "Write", "MultiEdit", "Glob", "Grep", "LS"]
          
      - name: Deep Maintenance (Full Analysis)
        if: steps.scope.outputs.mode == 'deep'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "20"
          direct_prompt: |
            Perform DEEP maintenance on claude-code-subagents using the repo-updater agent.
            
            Full analysis tasks:
            1. Complete repository validation and sync
            2. Analyze agent usage patterns and suggest consolidations
            3. Identify missing agent capabilities
            4. Optimize agent configurations for performance
            5. Update self-improvement strategies
            6. Generate comprehensive health report
            
            This is a thorough analysis - take the time to make meaningful improvements.
          allowed_tools: ["Task", "Read", "Write", "MultiEdit", "Glob", "Grep", "LS", "Bash"]
      
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "change_count=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "change_count=0" >> $GITHUB_OUTPUT
          fi
          
      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            fix: automated repository maintenance (${{ steps.scope.outputs.mode }} mode)
            
            Maintenance scope: ${{ steps.scope.outputs.mode }}
            Files changed: ${{ steps.check_changes.outputs.change_count }}
            
            🤖 Generated with Claude Code
            
            Co-Authored-By: Claude <noreply@anthropic.com>
          branch: automated/maintenance-${{ steps.scope.outputs.mode }}-${{ github.run_number }}
          delete-branch: true
          title: "🔧 [${{ steps.scope.outputs.mode }}] Automated Repository Maintenance"
          body: |
            ## 🤖 Automated Repository Maintenance
            
            **Maintenance Mode**: ${{ steps.scope.outputs.mode }}
            **Last Maintenance**: ${{ steps.scope.outputs.last_run }}
            **Files Changed**: ${{ steps.check_changes.outputs.change_count }}
            
            ### Maintenance Scope
            ${{ steps.scope.outputs.mode == 'light' && '✅ Quick validation only - minimal API usage' || '' }}
            ${{ steps.scope.outputs.mode == 'standard' && '🔧 Standard maintenance - sync and critical fixes' || '' }}
            ${{ steps.scope.outputs.mode == 'deep' && '🔍 Deep analysis - full optimization and improvements' || '' }}
            
            ### What Changed
            The self-healing repo-updater agent performed maintenance tasks based on the selected mode.
            
            ### Cost Optimization
            - API credits used: ~${{ steps.scope.outputs.mode == 'light' && '0.01' || steps.scope.outputs.mode == 'standard' && '0.05' || '0.10' }}
            - Efficiency rating: ${{ steps.scope.outputs.mode == 'light' && '🟢 Excellent' || steps.scope.outputs.mode == 'standard' && '🟡 Good' || '🟠 Comprehensive' }}
            
            ---
            *Generated by claude-code-subagents self-healing system*
          labels: |
            automated
            maintenance
            ${{ steps.scope.outputs.mode }}-mode

  # Job 3: Cost tracking and reporting
  cost-report:
    if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
    needs: [scheduled-maintenance]
    runs-on: ubuntu-latest
    
    steps:
      - name: Log API Usage
        run: |
          echo "📊 API Usage Report"
          echo "==================="
          echo "Date: $(date)"
          echo "Mode: ${{ needs.scheduled-maintenance.outputs.mode || 'unknown' }}"
          echo "Estimated Cost: ~$0.01-0.10"
          echo "Next Run: $(date -d 'next Tuesday 3AM UTC')"